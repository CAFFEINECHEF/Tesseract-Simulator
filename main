#Concept
#A 2D simulation that feels like you’re glimpsing a fourth spatial dimension, with glitchy effects to simulate reality breaking down.
#Think:
#Rotating tesseracts (4D cubes projected into 2D).
#Strange, shimmering objects that pulse unnaturally.
#Areas where reality glitches—pixels smear, twist, melt.
import pygame
import random
import numpy as np 
from itertools import product
import colorsys
from tesseract import Tesseract 

pygame.init()

WIDTH, HEIGHT = 800,700
screen = pygame.display.set_mode((WIDTH,HEIGHT))
clock = pygame.time.Clock()

t = Tesseract(scale=150,width=WIDTH,height=HEIGHT)
hue = 0.0 #range: 0.0 to 1.0

running = True
while running:
	for event in pygame.event.get():
		if event.type ==pygame.QUIT:
			running = False

	hue += 0.002
	if hue > 1.0:
		hue -= 1.0 

	#convert HSV( hue,saturation,value) to RGB
	r,g,b = colorsys.hsv_to_rgb(hue,1.0,1.0)
	bg_color = (int(r * 200),int(g * 200), (b * 200))
	screen.fill((bg_color))

	t.rotate_all(0.01,0,3)

	points = t.get_projected_points()
	for i,j in t.edges:
		pygame.draw.line(screen, (0,0,0),points[i], points[j], 3)

	pygame.display.flip()
	clock.tick(60)
